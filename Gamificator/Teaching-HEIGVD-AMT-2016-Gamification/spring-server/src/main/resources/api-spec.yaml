swagger: '2.0'
info:
  version: 1.0.0
  title: Gamification platform
  description: |
    **API specification of the Gamification platform**

    You can try all HTTP operation described in this Swagger spec.
    
    Find source code of this API [here](https://github.com/sarrab/GamifyApp.git)
host: localhost:8090
basePath: /api
schemes:
  - http
  - https
paths:
  /applications:
    get: 
      description: Retourne la liste de toutes les applications enregistrÃƒÆ’Ã‚Â©es
      produces:
        - application/json
      responses:
        200:
          description: OK, Applications summary
          schema:
            type: array
            items:
              $ref: '#/definitions/ApplicationDTO'
    post:
      description: Enregistre une application
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          description: Application to add
          schema:
            $ref: '#/definitions/Registration'
          required: true
      responses:
        201:
          description: OK, Application created
  /applications/{applicationUsername}:
    get:
      description: Retourne l'application dont le nom est spÃƒÆ’Ã‚Â©cifiÃƒÆ’Ã‚Â© dans le path
      produces:
        - application/json
      parameters:
        - in: path
          name: applicationUsername
          description: Nom d'utilisateur de l'application
          required: true
          type: string
      responses:
        200:
          description: Ok, Application details
          schema:
            $ref: '#/definitions/ApplicationDTO'
    put:
      description: Apporte des modifications ÃƒÂ  l'application
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: applicationUsername
          description: Nom d'utilisateur de l'application
          required: true
          type: string
        - name: body
          in: body
          description: Modification of the application
          schema:
            $ref: '#/definitions/Registration'
          required: false
      responses:
        200:
          description: OK, Application modified
    delete:
      description: Supprime une application
      produces:
        - application/json
      parameters:
        - in: path
          name: applicationUsername
          description: Nom d'utilisateur de l'application
          required: true
          type: string
      responses:
        200:
          description: OK, Application deleted
  /badges:
    get: 
      description: Retourne la liste de tous les badges de l'application 
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/TokenHeader'
      responses:
        200:
          description: OK, Badges summary
          schema:
            type: array
            items:
              $ref: '#/definitions/BadgeDTO'
    post:
      description: CrÃƒÆ’Ã‚Â©e un badge dans l'application
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          description: Badge to add
          schema:
            $ref: '#/definitions/BadgeDTO'
          required: true
        - $ref: '#/parameters/TokenHeader'
      responses:
        201:
          description: OK, Badge created
  /badges/{badgeId}:
    get:
      description: Retourne le badge dont l'id est spÃƒÆ’Ã‚Â©cifiÃƒÆ’Ã‚Â© dans le path
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/TokenHeader'
        - in: path
          name: badgeId
          description: Badge's id
          required: true
          type: integer
          format: int64   
      responses:
        200:
          description: Ok, Badge details
          schema:
            $ref: '#/definitions/BadgeDTO'
    put:
      description: Apporte des modifications au badge
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/TokenHeader'
        - in: path
          name: badgeId
          description: Badge's id
          required: true
          type: integer
          format: int64
        - name: body
          in: body
          description: Modification of the badge
          schema:
            $ref: '#/definitions/BadgeDTO'
          required: false
      responses:
        200:
          description: OK, Badge modified
    delete:
      description: Supprime le badge
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/TokenHeader'
        - in: path
          name: badgeId
          description: Badge's id
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: OK, Badge deleted
  /pointScales:
    get: 
      description: Retourne la liste de tous les pointScales de l'application 
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/TokenHeader'
      responses:
        200:
          description: OK, pointScales summary
          schema:
            type: array
            items:
              $ref: '#/definitions/PointScaleDTO'
    post:
      description: CrÃƒÆ’Ã‚Â©e un pointScale dans l'application
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/TokenHeader'
        - name: body
          in: body
          description: PointScale to add
          schema:
            $ref: '#/definitions/PointScaleDTO'
          required: true
      responses:
        201:
          description: OK, PointScale created
  /pointScales/{pointScaleId}:
    get:
      description: Retourne le pointScale dont l'id est spÃƒÆ’Ã‚Â©cifiÃƒÆ’Ã‚Â© dans le path
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/TokenHeader'
        - in: path
          name: pointScaleId
          description: PointScale's id
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: Ok, PointScale details
          schema:
            $ref: '#/definitions/PointScaleDTO'
    put:
      description: Apporte des modifications au pointScale
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/TokenHeader'
        - in: path
          name: pointScaleId
          description: PointScale's id
          required: true
          type: integer
          format: int64
        - name: body
          in: body
          description: Modification of the pointScale
          schema:
            $ref: '#/definitions/PointScaleDTO'
          required: false
      responses:
        200:
          description: OK, PointScale modified
    delete:
      description: Supprime le pointScale
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/TokenHeader'
        - in: path
          name: pointScaleId
          description: PointScale's id
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: OK, PointScale deleted
  /events:
    post:
      description:  Report that a new event has happened in the gamified application
      operationId: reportEvent
      consumes:
      - application/json
      parameters:
        - $ref: '#/parameters/TokenHeader'
        - name: event
          in: body
          description: The event that occured in the realm of the gamified application
          schema:
            $ref: '#/definitions/EventDTO'
          required: true
      responses:
        202:
          description:
              The platform has accepted the event and will process it (asynchronously)
          schema: 
            $ref: '#/definitions/EventDTO'   
  /authentications:
    post:
      operationId: authenticateApplicationAndGetToken
      consumes:
      - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          description: The info required to authenticate an application
          schema:
            $ref: '#/definitions/Credentials'
          required: true
      responses:
        200:
          description: Authentication sucessful
          schema:
            $ref: '#/definitions/Token'
        401:
          description: Authentication failed
  /users/{id}:
    get:
      description:  Retrieve one user by id
      operationId: findUserById
      parameters:
        - $ref: '#/parameters/TokenHeader'
        - name: id
          in: path
          description: id of the user to fetch
          required: true
          type: string
      produces:
        - application/json
      responses:
        200:
          description:
              Returns the specified user state
          schema:
            $ref: '#/definitions/User'  
  /rules:
    get:
      description: Retourne l'ensemble des rÃƒÆ’Ã‚Â¨gles de l'application
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/TokenHeader'
      responses:
        200:
          description:
              Application's rules
          schema:
            type: array
            items:
             $ref: '#/definitions/RuleDTO'
    post:
      description: crÃƒÆ’Ã‚Â©e une rÃƒÆ’Ã‚Â¨gle dans l'application
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/TokenHeader'
        - in: body
          name: body
          description: paramÃƒÆ’Ã‚Â¨tres de la rÃƒÆ’Ã‚Â¨gles crÃƒÆ’Ã‚Â©ÃƒÆ’Ã‚Â©e
          schema:
            $ref: '#/definitions/RuleDTO'
          required: true
      responses: 
        201:
          description: 
            OK rÃƒÆ’Ã‚Â¨gle crÃƒÆ’Ã‚Â©ÃƒÆ’Ã‚Â©e
          schema:
            $ref: '#/definitions/RuleDTO'
  /rules/{ruleId}:
    get:
      description: Retourne la rÃƒÆ’Ã‚Â¨gle dont l'id est spÃƒÆ’Ã‚Â©cifiÃƒÆ’Ã‚Â© dans le path
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/TokenHeader'
        - in: path
          name: ruleId
          description: rule's id
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: Ok, Rule's details
          schema:
            $ref: '#/definitions/RuleDTO'
    put:
      description: Apporte des modifications ÃƒÆ’Ã‚Â  la rÃƒÆ’Ã‚Â¨gle
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/TokenHeader'
        - in: path
          name: ruleId
          description: Rule's id
          required: true
          type: integer
          format: int64
        - name: body
          in: body
          description: Modification of the Rule
          schema:
            $ref: '#/definitions/RuleDTO'
          required: false
      responses:
        200:
          description: OK, Rule modified
    delete:
      description: Supprime une rÃƒÆ’Ã‚Â¨gle
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/TokenHeader'
        - in: path
          name: ruleId
          description: Rule's id
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: OK, Rule deleted
  /pointsAwards:
    get:
      description: Retourne l'ensemble des points gagnÃƒÆ’Ã‚Â©s par un utilisateur
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/TokenHeader'
      responses:
        200:
          description:
              Point award
          schema:
            $ref: '#/definitions/PointsAwardDTO'
    post:
      description: crÃƒÆ’Ã‚Â©e un point award pour un utilisateur
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/TokenHeader'
        - in: body
          name: body
          description: paramÃƒÆ’Ã‚Â¨tres de la rÃƒÆ’Ã‚Â©compence crÃƒÆ’Ã‚Â©ÃƒÆ’Ã‚Â©e
          schema:
            $ref: '#/definitions/PointsAwardDTO'
          required: true
      responses:
        201:
          description:
            OK award crÃƒÆ’Ã‚Â©ÃƒÆ’Ã‚Â©
          schema:
            $ref: '#/definitions/PointsAwardDTO'
  /pointsAwards/{id}:
    get:
      description: Retourne le point award dont l'id est spÃƒÆ’Ã‚Â©cifiÃƒÆ’Ã‚Â© dans le path
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/TokenHeader'
        - in: path
          name: id
          description: point award's id
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: Ok, point award's details
          schema:
            $ref: '#/definitions/PointsAwardDTO'
    put:
      description: Apporte des modifications ÃƒÆ’Ã‚Â  un point award
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/TokenHeader'
        - in: path
          name: id
          description: point award's id
          required: true
          type: integer
          format: int64
        - name: body
          in: body
          description: Modification of the point award
          schema:
            $ref: '#/definitions/PointsAwardDTO'
          required: false
      responses:
        200:
          description: OK, point award modified
    delete:
      description: Supprime un point award
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: point award's id
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: OK, point award deleted
  /leaderboard:
    get:
      description: Retourne les meilleurs utilisateurs
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/TokenHeader'
        - in: query
          name: size
          description: nombre de leaders ÃƒÆ’Ã‚Â  afficher
          required: false
          type: integer
          format: int32
      responses:
        200:
          description:
              leaders
          schema:
            $ref: '#/definitions/LeaderboardDTO'
  /endUser:
    get:
      description: Retourne tous les utilisateurs de l'application
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/TokenHeader'
      responses:
        200:
          description:
              liste des utilisateurs
          schema:
            type: array
            items:
             $ref: '#/definitions/EndUserDTO'
    post:
      description: crÃƒÆ’Ã‚Â©e un utilisateur
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/TokenHeader'
        - in: body
          name: body
          description: donnÃƒÆ’Ã‚Â©es de l'utilisateur
          schema:
            $ref: '#/definitions/EndUserDTO'
          required: true
      responses:
        201:
          description:
            OK utilisateur crÃƒÆ’Ã‚Â©ÃƒÆ’Ã‚Â©
          schema:
            $ref: '#/definitions/EndUserDTO'
            
  /endUser/{endUser'ID}/reputation:
    get:
      description: Retourne tous les utilisateurs de l'application
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/TokenHeader'
        - in: path
          name: endUser'ID
          description: user's id
          required: true
          type: integer
          format: int64 
          
      responses:
        200:
          description:
              liste des utilisateurs
          schema:
            $ref: '#/definitions/EndUserReputationDTO'
  /endUser/{endUser'ID}/badges:
    get:
      description: Retourne tous les utilisateurs de l'application
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/TokenHeader'
        - in: path
          name: endUser'ID
          description: endUser'ID
          required: true
          type: integer
          format: int64 
        
      responses:
        200:
          description:
              liste des utilisateurs
            
  /endUser/{id}:
    get:
      description: Retourne l'utilisateur dont l'id est spÃƒÆ’Ã‚Â©cifiÃƒÆ’Ã‚Â© dans le path
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/TokenHeader'
        - in: path
          name: id
          description: user's id
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: Ok, user's details
          schema:
            $ref: '#/definitions/EndUserDTO'
    put:
      description: Apporte des modifications sur un utilisateur
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/TokenHeader'
        - in: path
          name: id
          description: user's id
          required: true
          type: integer
          format: int64
        - name: body
          in: body
          description: Update of a user
          schema:
            $ref: '#/definitions/EndUserDTO'
          required: false
      responses:
        200:
          description: OK, user updated
          
    delete:
      description: Supprime un utilisateur
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/TokenHeader'
        - in: path
          name: id
          description: user's id
          required: true
          type: integer
          format: int64     
      responses:
        200:
          description: OK, user deleted
definitions:
  EndUserDTO:
    type: object
    properties:
      name:
        type: string
        description: Nom de l'utilisateur
  LeaderboardDTO:
    type: object
    properties:
      points:
        type: integer
        format: int32
        description: Nombre de points obtenus par un leader
      name:
        type: string
        description: Nom du leader
      badges:
        type: array
        items:
            type: string
        description: Liste de tous les nom des badges d'un leader
  ApplicationDTO:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
        description: Name of the application
      badges:
        type: array
        items:
            type: string
            format: uri
        description: List of all badges of the application
  Registration:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
        description: Name of the application
      password:
        type: string
        format: password
        description: Password to authenticate the application
  BadgeDTO:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
        description: Name of the badge
      description:
        type: string
        description: Description of the badge
      imageURI:
        type: string
        format: uri
        description: Image of thedu badge
      applicationName:
        type: string
        description: Name of the application that create the badge
  PointScaleDTO:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
        description: Badge name.
      description:
        type: string
        description: Description du badge
      nbrDePoints:
        type: integer
        format: int32
        
  EventDTO:
    type: object
    description: EvÃƒÆ’Ã‚Â¨nement produit dans une application
    properties:
      type:
        type: string
        description: type de l'ÃƒÆ’Ã‚Â©vÃƒÆ’Ã‚Â¨nement produit
      userId:
        type: integer
        format: int64
        description: Id de l'utilisateur qui a produit l'ÃƒÆ’Ã‚Â©vÃƒÆ’Ã‚Â¨nement
      properties:
        type: array
        items:
            type: string
      timeStamp:
        type: string
        format: date-time
        description: Temps au quel l'ÃƒÆ’Ã‚Â©vÃƒÆ’Ã‚Â¨nement a ÃƒÆ’Ã‚Â©tÃƒÆ’Ã‚Â© produit dans l'application
  Credentials:
    type: object
    properties:
      applicationName:
        type: string
      password:
        type: string
  User:
    type: object
    properties:
      userId:
        type: string
      numberOfEvents:
        type: integer
  Token:
    type: object
    properties:
      applicationName:
        type: string
  RuleDTO:
    type: object
    properties:
      id:
        type: integer
        format: int64
      event:
        type: string
        description: type d'ÃƒÆ’Ã‚Â©vÃƒÆ’Ã‚Â¨nement
      action:
        type: string
        description: type d'action
      pointScale:
        type: string
      points:
        type: integer
        format: int32
      badgeId:
        type: integer
        format: int64
      ActionId:
        type: integer
        format: int64

  PointsAwardDTO:
    type: object
    properties:
      motif:
        type: string
        description: Raison pour laquelle le point est attribuÃƒÆ’Ã‚Â©
      points:
        type: integer
        format: int64
        description: Nombre de points attribuÃƒÆ’Ã‚Â©s

  EndUserReputationDTO:
    type: object
    properties:
      badge:
          type: array
          items:
            $ref: '#/definitions/BadgeDTO'
      points:
        type: integer
        format: int64
        description: Nombre de points attribuÃƒÆ’Ã‚Â©s

parameters:
  TokenHeader:
    description: token that identifies the app sending the request
    name: X-Gamification-Token
    in: header
    required: true
    type: string
